name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push client image
      uses: docker/build-push-action@v4
      with:
        context: ./client
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/todo-client:latest

    - name: Build and push server image
      uses: docker/build-push-action@v4
      with:
        context: ./server
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/todo-server:latest

    - name: Create Docker network
      run: docker network create todo-app-network

    - name: Run MongoDB container
      run: docker run -d --name mongodb --network todo-app-network -p 27017:27017 mongo

    - name: Run server container
      run: docker run -d --name todo-server --network todo-app-network -p 5000:5000 -e NODE_TLS_REJECT_UNAUTHORIZED=0 -e MONGODB_URI=mongodb://mongodb:27017/todos -e EMAIL_USER=test@example.com -e EMAIL_PASS=test123 -e POP3_HOST=pop.example.com -e POP3_PORT=995 -e POP3_TLS=true ${{ secrets.DOCKER_USERNAME }}/todo-server:latest

    - name: Run client container
      run: docker run -d --name todo-client --network todo-app-network -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/todo-client:latest

    - name: Test server health
      run: |
        sleep 10 # Wait for containers to initialize
        curl -f http://localhost:5000/api/tasks || exit 1

    - name: Test client health
      run: |
        curl -f http://localhost:3000 || exit 1

    - name: Clean up
      run: |
        docker rm -f todo-client todo-server mongodb
        docker network rm todo-app-network
